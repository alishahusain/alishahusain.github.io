{"version":3,"sources":["components/landingpage.js","components/aboutme.js","components/contact.js","components/projects.js","components/resume.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","style","width","margin","className","col","src","alt","href","rel","target","aria-hidden","Component","AboutMe","Contact","Projects","props","state","activeTab","this","shadow","minWidth","color","height","background","border","colored","name","onChange","tabId","setState","ripple","toggleCategories","Main","exact","path","component","App","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","as","to","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5f0efb0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\n\n\nclass LandingPage extends Component {\n    render() {\n        return(\n            <div style={{width:'100%', margin:'auto'}}>\n                <Grid className=\"landing-grid\">\n                    <Cell col={12}>\n                        <img \n                            src='https://i.ibb.co/QPLJGjK/avatar-1.png'\n                            alt='avatar'\n                            className='avatar-img'\n                        />\n                        <div className='banner-text'>\n                            <h1>Software Developer</h1>\n                            <hr/>\n                            <p>Python   |   Java   |   SQL   |   R   |   HTML/CSS   |   JavaScript   | React</p>\n                            <div className=\"social-links\">\n                            {/* LinkedIn*/}\n                            <a href=\"http://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-linkedin-square\" aria-hidden=\"true\" />\n                            </a>\n\n                            {/* GitHub*/}\n                            <a href=\"http://google.com\" rel=\"noopener noreferrer\" target=\"_blank\">\n                                <i className=\"fa fa-github-square\" aria-hidden=\"true\" />\n                            </a>\n                            </div>\n                        </div>\n                    </Cell>\n\n\n                </Grid>\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport { Grid, Cell } from 'react-mdl';\n\nclass AboutMe extends Component {\n    render() {\n        return(\n            <div>\n            <Grid className=\"about-page\">\n                    <Cell col={12}>\n                    <div className=\"about-desc\">\n                    <h1>Hi!</h1>  \n                    <h2>I am an aspiring full-stack software developer, with a particular interest in smart cities, AI/ML, data science for social good, and GIS. <br/>\n                    Please contact me at alishahusain20@gmail.com if you would like to connect.      \n                    </h2>  \n                    </div>\n\n                    <h1>Thanks for stopping by!</h1>  \n                    </Cell>  \n                        \n            </Grid>\n            </div>\n        )\n    }\n}\n\nexport default AboutMe;","import React, { Component } from 'react';\n\nclass Contact extends Component {\n    render() {\n        return(\n            <div><h1>Contact Page</h1></div>\n        )\n    }\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Tabs, Tab, Grid, Cell, Card, CardText, CardTitle, CardActions, Button, CardMenu, IconButton } from 'react-mdl';\n\nclass Projects extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { activeTab: 0 };\n    }\n\n\n\n\n\n    //toggle categories method\n    toggleCategories() {\n        if(this.state.activeTab === 0) {\n            return (\n                <div className=\"projects-grid\">\n                {/* Project 1 */}\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                  <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/mappergraph-2.jpg) center / cover'}} > MAPPERing Communities of Interest</CardTitle>\n                  <CardText>\n                    This project involved working with the MAPPER algorithm, which helps visualize high dimensional datasets using topological methods. Here you will find code that processes Census data for input into MAPPER, and running and analyzing MAPPER results. \n                  </CardText>\n                  <CardActions border>\n                    <Button colored>GitHub</Button>\n                  </CardActions>\n                  <CardMenu style={{color: '#fff'}}>\n                    <IconButton name=\"share\" />\n                  </CardMenu>\n                </Card>\n      \n                {/* Project 2 */}\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                  <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/oswbackground.jpg) center / cover'}} >OpenSidewalks API</CardTitle>\n                  <CardText>\n                    This tool allows municipalities to convert their centerline sidewalk data into an OpenStreetMap compatible GeoJSON output. \n                  </CardText>\n                  <CardActions border>\n                  <a href=\"https://github.com/alishahusain/OpenSidewalks-API\">\n                    <Button colored>GitHub</Button>\n                    </a>\n                   \n                  </CardActions>\n                  <CardMenu style={{color: '#fff'}}>\n                    <IconButton name=\"share\" />\n                  </CardMenu>\n                </Card>\n      \n                {/* Project 3 */}\n                <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                  <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/heatmap_1.png) center / cover'}} >What's Poppin'</CardTitle>\n                  <CardText>\n                    For people who want to know how busy someplace is before they visit it - an application that displays popular time data on an interactive map.\n                  </CardText>\n                  <CardActions border>\n                  <a href=\"https://github.com/alishahusain/whats-poppin\">\n                    <Button colored>GitHub</Button>\n                    </a>\n                  </CardActions>\n                  <CardMenu style={{color: '#fff'}}>\n                    <IconButton name=\"share\" />\n                  </CardMenu>\n                </Card>\n              </div>\n            )\n        } else if(this.state.activeTab === 1) {\n            return (\n                <div><h1></h1></div>\n            )\n        } else if(this.state.activeTab === 2) {\n            return (\n              <div className=\"projects-grid\">\n              {/* Project 1 */}\n              <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/reactpic2.png) center / cover'}} > alishahusain.github.io</CardTitle>\n                <CardText>\n                  This website was created using JavaScript and ReactJS.\n                </CardText>\n                <CardActions border>\n                  <Button colored>GitHub</Button>\n                </CardActions>\n                <CardMenu style={{color: '#fff'}}>\n                  <IconButton name=\"share\" />\n                </CardMenu>\n              </Card>\n    \n              {/* Project 2 */}\n              <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/nostalgic-youtube.jpg) center / cover'}} >Nostalgia Extension</CardTitle>\n                <CardText>\n                Chrome browser extension that plays a random nostalgic YouTube video.\n                </CardText>\n                <CardActions border>\n                <a href=\"https://github.com/alishahusain/Nostalgia-Extension\">\n                  <Button colored>GitHub</Button>\n                  </a>\n                 \n                </CardActions>\n                <CardMenu style={{color: '#fff'}}>\n                  <IconButton name=\"share\" />\n                </CardMenu>\n              </Card>\n    \n\n            </div>\n            )\n        } else if(this.state.activeTab === 3) {\n            return (\n              <div className=\"projects-grid\">\n              {/* Project 1 */}\n              <Card shadow={5} style={{minWidth: '450', margin: 'auto'}}>\n                <CardTitle style={{color: '#fff', height: '176px', background: 'url(https://www.linkpicture.com/q/usexports.jpg) center / cover'}} > US Exports, Visualized</CardTitle>\n                <CardText>\n                This research project investigates the United States state level export product data. Our team seeks to understand the diverse selection of export products, the trends in these exports, as well as the financial significance from different spatial scales.\n                </CardText>\n                <CardActions border>\n                <a href=\"https://github.com/alishahusain/GEOG458_Final\"> </a>\n                  <Button colored>GitHub</Button>\n                </CardActions>\n                <CardMenu style={{color: '#fff'}}>\n                  <IconButton name=\"share\" />\n                </CardMenu>\n              </Card>\n  \n\n            </div>\n            )\n        }\n    }\n    \n\n\n    render() {\n        return(\n            <div className=\"category-tabs\">\n                <Tabs activeTab={this.state.activeTab} onChange={(tabId) => this.setState({ activeTab:tabId })} ripple>\n                    <Tab>Python</Tab>\n                    <Tab>Java</Tab>\n                    <Tab>JavaScript</Tab>\n                    <Tab>R</Tab>\n                </Tabs>\n\n                    <Grid>\n                        <Cell col={12}>\n                            <div className=\"content\">{this.toggleCategories()}</div>\n                        </Cell>\n                    </Grid>\n                    \n        \n                </div>\n\n        )\n    }\n}\n\nexport default Projects;","import React, { Component } from 'react';\n\nclass Resume extends Component {\n    render() {\n        return(\n            <div><h1>Resume Page</h1></div>\n        )\n    }\n}\n\nexport default Resume;","import React from 'react';\nimport LandingPage from './landingpage';\nimport AboutMe from './aboutme';\nimport Contact from './contact';\nimport Projects from './projects';\nimport Resume from './resume';\n\n\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n\nconst Main = () => (\n\n    <Switch>\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route exact path=\"/aboutme\" component={AboutMe} />\n        <Route exact path=\"/contact\" component={Contact} />\n        <Route exact path=\"/projects\" component={Projects} />\n    </Switch>\n\n\n)\n\nexport default Main;","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Nav,NavDropdown} from 'react-bootstrap';\nimport Button from 'react-bootstrap/Button';\nimport { Form, FormControl } from 'react-bootstrap';\nimport Main from './components/main';\nimport { Link } from 'react-router-dom';\nimport { HashRouter, Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div>\n   \n      <Navbar bg=\"\" variant=\"dark\" expand=\"lg\">\n  <Navbar.Brand href=\"/\">Alisha Husain</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Nav.Link as={Link} to=\"/\" exact>Home</Nav.Link>\n      <Nav.Link as={Link} to=\"/aboutme\" exact>About Me</Nav.Link>\n      <Nav.Link as={Link} to=\"/contact\" exact>Contact</Nav.Link>\n      <Nav.Link as={Link} to=\"/projects\" exact>Projects</Nav.Link>\n    </Nav>\n\n  </Navbar.Collapse>\n  \n</Navbar>\n\n<Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\nimport 'react-mdl/extra/material.css';\nimport 'react-mdl/extra/material.js';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}